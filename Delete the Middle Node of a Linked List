/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
           if(head==NULL or head->next==NULL){
              return NULL;
           }
          ListNode* slow=head;
          ListNode* fast=head;
          ListNode* pre=head;
          while(fast!=NULL and fast->next!=NULL){
                 slow=slow->next;
                 fast=fast->next;
                 if(fast!=NULL){
                    fast=fast->next;
                 }
                 if(fast!=NULL and fast->next!=NULL){
                    pre=slow;
                 }
          }
          pre->next=pre->next->next;
          return head;
    }
};
